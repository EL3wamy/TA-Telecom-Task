// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TATelecomTask.Contexts;

namespace TATelecomTask.Migrations
{
    [DbContext(typeof(TaskDBContext))]
    partial class TaskDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TATelecomTask.Domain.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("MobileNumber")
                        .IsUnique()
                        .HasFilter("[MobileNumber] IS NOT NULL");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MobileNumber = "010603211"
                        },
                        new
                        {
                            Id = 2,
                            MobileNumber = "010603212"
                        },
                        new
                        {
                            Id = 3,
                            MobileNumber = "010603213"
                        },
                        new
                        {
                            Id = 4,
                            MobileNumber = "010603214"
                        },
                        new
                        {
                            Id = 5,
                            MobileNumber = "010603215"
                        },
                        new
                        {
                            Id = 6,
                            MobileNumber = "010603216"
                        },
                        new
                        {
                            Id = 7,
                            MobileNumber = "010603217"
                        },
                        new
                        {
                            Id = 8,
                            MobileNumber = "010603218"
                        },
                        new
                        {
                            Id = 9,
                            MobileNumber = "010603219"
                        },
                        new
                        {
                            Id = 10,
                            MobileNumber = "0106032110"
                        },
                        new
                        {
                            Id = 11,
                            MobileNumber = "0106032111"
                        },
                        new
                        {
                            Id = 12,
                            MobileNumber = "0106032112"
                        },
                        new
                        {
                            Id = 13,
                            MobileNumber = "0106032113"
                        },
                        new
                        {
                            Id = 14,
                            MobileNumber = "0106032114"
                        },
                        new
                        {
                            Id = 15,
                            MobileNumber = "0106032115"
                        },
                        new
                        {
                            Id = 16,
                            MobileNumber = "0106032116"
                        },
                        new
                        {
                            Id = 17,
                            MobileNumber = "0106032117"
                        },
                        new
                        {
                            Id = 18,
                            MobileNumber = "0106032118"
                        },
                        new
                        {
                            Id = 19,
                            MobileNumber = "0106032119"
                        },
                        new
                        {
                            Id = 20,
                            MobileNumber = "0106032120"
                        },
                        new
                        {
                            Id = 21,
                            MobileNumber = "0106032121"
                        },
                        new
                        {
                            Id = 22,
                            MobileNumber = "0106032122"
                        },
                        new
                        {
                            Id = 23,
                            MobileNumber = "0106032123"
                        },
                        new
                        {
                            Id = 24,
                            MobileNumber = "0106032124"
                        },
                        new
                        {
                            Id = 25,
                            MobileNumber = "0106032125"
                        },
                        new
                        {
                            Id = 26,
                            MobileNumber = "0106032126"
                        },
                        new
                        {
                            Id = 27,
                            MobileNumber = "0106032127"
                        },
                        new
                        {
                            Id = 28,
                            MobileNumber = "0106032128"
                        },
                        new
                        {
                            Id = 29,
                            MobileNumber = "0106032129"
                        },
                        new
                        {
                            Id = 30,
                            MobileNumber = "0106032130"
                        },
                        new
                        {
                            Id = 31,
                            MobileNumber = "0106032131"
                        },
                        new
                        {
                            Id = 32,
                            MobileNumber = "0106032132"
                        },
                        new
                        {
                            Id = 33,
                            MobileNumber = "0106032133"
                        },
                        new
                        {
                            Id = 34,
                            MobileNumber = "0106032134"
                        },
                        new
                        {
                            Id = 35,
                            MobileNumber = "0106032135"
                        },
                        new
                        {
                            Id = 36,
                            MobileNumber = "0106032136"
                        },
                        new
                        {
                            Id = 37,
                            MobileNumber = "0106032137"
                        },
                        new
                        {
                            Id = 38,
                            MobileNumber = "0106032138"
                        },
                        new
                        {
                            Id = 39,
                            MobileNumber = "0106032139"
                        },
                        new
                        {
                            Id = 40,
                            MobileNumber = "0106032140"
                        },
                        new
                        {
                            Id = 41,
                            MobileNumber = "0106032141"
                        },
                        new
                        {
                            Id = 42,
                            MobileNumber = "0106032142"
                        },
                        new
                        {
                            Id = 43,
                            MobileNumber = "0106032143"
                        },
                        new
                        {
                            Id = 44,
                            MobileNumber = "0106032144"
                        },
                        new
                        {
                            Id = 45,
                            MobileNumber = "0106032145"
                        },
                        new
                        {
                            Id = 46,
                            MobileNumber = "0106032146"
                        },
                        new
                        {
                            Id = 47,
                            MobileNumber = "0106032147"
                        },
                        new
                        {
                            Id = 48,
                            MobileNumber = "0106032148"
                        },
                        new
                        {
                            Id = 49,
                            MobileNumber = "0106032149"
                        },
                        new
                        {
                            Id = 50,
                            MobileNumber = "0106032150"
                        },
                        new
                        {
                            Id = 51,
                            MobileNumber = "0106032151"
                        },
                        new
                        {
                            Id = 52,
                            MobileNumber = "0106032152"
                        },
                        new
                        {
                            Id = 53,
                            MobileNumber = "0106032153"
                        },
                        new
                        {
                            Id = 54,
                            MobileNumber = "0106032154"
                        },
                        new
                        {
                            Id = 55,
                            MobileNumber = "0106032155"
                        },
                        new
                        {
                            Id = 56,
                            MobileNumber = "0106032156"
                        },
                        new
                        {
                            Id = 57,
                            MobileNumber = "0106032157"
                        },
                        new
                        {
                            Id = 58,
                            MobileNumber = "0106032158"
                        },
                        new
                        {
                            Id = 59,
                            MobileNumber = "0106032159"
                        },
                        new
                        {
                            Id = 60,
                            MobileNumber = "0106032160"
                        },
                        new
                        {
                            Id = 61,
                            MobileNumber = "0106032161"
                        },
                        new
                        {
                            Id = 62,
                            MobileNumber = "0106032162"
                        },
                        new
                        {
                            Id = 63,
                            MobileNumber = "0106032163"
                        },
                        new
                        {
                            Id = 64,
                            MobileNumber = "0106032164"
                        },
                        new
                        {
                            Id = 65,
                            MobileNumber = "0106032165"
                        },
                        new
                        {
                            Id = 66,
                            MobileNumber = "0106032166"
                        },
                        new
                        {
                            Id = 67,
                            MobileNumber = "0106032167"
                        },
                        new
                        {
                            Id = 68,
                            MobileNumber = "0106032168"
                        },
                        new
                        {
                            Id = 69,
                            MobileNumber = "0106032169"
                        },
                        new
                        {
                            Id = 70,
                            MobileNumber = "0106032170"
                        },
                        new
                        {
                            Id = 71,
                            MobileNumber = "0106032171"
                        },
                        new
                        {
                            Id = 72,
                            MobileNumber = "0106032172"
                        },
                        new
                        {
                            Id = 73,
                            MobileNumber = "0106032173"
                        },
                        new
                        {
                            Id = 74,
                            MobileNumber = "0106032174"
                        },
                        new
                        {
                            Id = 75,
                            MobileNumber = "0106032175"
                        },
                        new
                        {
                            Id = 76,
                            MobileNumber = "0106032176"
                        },
                        new
                        {
                            Id = 77,
                            MobileNumber = "0106032177"
                        },
                        new
                        {
                            Id = 78,
                            MobileNumber = "0106032178"
                        },
                        new
                        {
                            Id = 79,
                            MobileNumber = "0106032179"
                        },
                        new
                        {
                            Id = 80,
                            MobileNumber = "0106032180"
                        },
                        new
                        {
                            Id = 81,
                            MobileNumber = "0106032181"
                        },
                        new
                        {
                            Id = 82,
                            MobileNumber = "0106032182"
                        },
                        new
                        {
                            Id = 83,
                            MobileNumber = "0106032183"
                        },
                        new
                        {
                            Id = 84,
                            MobileNumber = "0106032184"
                        },
                        new
                        {
                            Id = 85,
                            MobileNumber = "0106032185"
                        },
                        new
                        {
                            Id = 86,
                            MobileNumber = "0106032186"
                        },
                        new
                        {
                            Id = 87,
                            MobileNumber = "0106032187"
                        },
                        new
                        {
                            Id = 88,
                            MobileNumber = "0106032188"
                        },
                        new
                        {
                            Id = 89,
                            MobileNumber = "0106032189"
                        },
                        new
                        {
                            Id = 90,
                            MobileNumber = "0106032190"
                        },
                        new
                        {
                            Id = 91,
                            MobileNumber = "0106032191"
                        },
                        new
                        {
                            Id = 92,
                            MobileNumber = "0106032192"
                        },
                        new
                        {
                            Id = 93,
                            MobileNumber = "0106032193"
                        },
                        new
                        {
                            Id = 94,
                            MobileNumber = "0106032194"
                        },
                        new
                        {
                            Id = 95,
                            MobileNumber = "0106032195"
                        },
                        new
                        {
                            Id = 96,
                            MobileNumber = "0106032196"
                        },
                        new
                        {
                            Id = 97,
                            MobileNumber = "0106032197"
                        },
                        new
                        {
                            Id = 98,
                            MobileNumber = "0106032198"
                        },
                        new
                        {
                            Id = 99,
                            MobileNumber = "0106032199"
                        },
                        new
                        {
                            Id = 100,
                            MobileNumber = "01060321100"
                        });
                });

            modelBuilder.Entity("TATelecomTask.Domain.ContactLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactLogs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TATelecomTask.Domain.ContactLog", b =>
                {
                    b.HasOne("TATelecomTask.Domain.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
